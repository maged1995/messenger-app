version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.3.0
  python: circleci/python@1.1.0

jobs:
  # test-lint:
  #   docker:
  #     - image: python:3
  #   steps:
  #     - checkout
  #     - run:
  #         command: |
  #           apt-get update \
  #             && apt-get install -y --no-install-recommends \
  #                 postgresql-client \
  #             && rm -rf /var/lib/apt/lists/*

  #           python3 -m venv /opt/venv
  #           PATH="$VIRTUAL_ENV/bin:$PATH"

  #           pip install pipenv
  #           pipenv install -r ./messenger_api/requirements.txt
  #           pipenv run pylint messenger_api/*
  #         name: Test

  test-lint:
    docker:
      - image: python:3
    steps:
      - checkout
      - run:
          command: |
            apt-get update \
              && apt-get install -y --no-install-recommends \
                  postgresql-client \
              && rm -rf /var/lib/apt/lists/*

            python3 -m venv venv

            venv/bin/python3 -m pip install --upgrade pip
            . venv/bin/activate
            pip install wheel
            pip install -r messenger_api/requirements.txt
            pip install pylint
            pylint messenger_api/*
          name: Test
  eksctl-install:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          command: |
            curl --location "https://github.com/weaveworks/eksctl/releases/download/v0.73.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - kubernetes/install
      - run:
          command: |
            source $BASH_ENV
      - run:
          command: |
            ./createStagingCluster.sh

workflows:
  test:
    jobs:
      - test-lint
