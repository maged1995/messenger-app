version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.3.0
  python: circleci/python@1.1.0
  jq: circleci/jq@2.2.0

jobs:

  eksctl-install:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          command: |
            curl --location "https://github.com/weaveworks/eksctl/releases/download/v0.73.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
  update-image:
    machine: true
    working_directory: ~/my_app
    steps:
      - checkout
      - run:
          command: |
            DATE_OF_PUSH=$(date +"%y.%m.%d-%H.%M.%S")
            if docker build -t django-app . && ((! grep "")); then
              exit 1
            fi

            if docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD && ((! grep "")); then
              exit 1
            fi
            docker image tag django-app maged1995/django-app:latest
            docker image tag django-app maged1995/django-app:$DATE_OF_PUSH
            docker image push maged1995/django-app:latest
            docker image push maged1995/django-app:$DATE_OF_PUSH
  # test-lint:
  #   docker:
  #     - image: python:3
  #   steps:
  #     - checkout
  #     - run:
  #         command: |
  #           apt-get update \
  #             && apt-get install -y --no-install-recommends \
  #                 postgresql-client \
  #             && rm -rf /var/lib/apt/lists/*

  #           python3 -m venv /opt/venv
  #           PATH="$VIRTUAL_ENV/bin:$PATH"

  #           pip install pipenv
  #           pipenv install -r ./messenger_api/requirements.txt
  #           pipenv run pylint messenger_api/*
  #         name: Test

  test-lint:
    docker:
      - image: python:3.9
    steps:
      - checkout
      - run:
          command: |
            apt-get update \
              && apt-get install -y --no-install-recommends \
                  postgresql-client \
              && rm -rf /var/lib/apt/lists/*

            python3 -m venv venv

            venv/bin/python3 -m pip install --upgrade pip
            . venv/bin/activate
            pip install -r messenger_api/requirements.txt
            pip install pylint --upgrade
            if pylint messenger_api/* | grep 'Your code has been rated at '; then
              exit 0
            fi
          name: Test
  deploy:
    machine:
      image: ubuntu-2004:202010-01
    # docker:
    #   - image: python:3.9
    steps:
      - checkout
      - kubernetes/install
      - run:
          command: |
            sudo apt install -y tar gzip
            sudo snap install jq yq
      - run:
          command: |
            curl --location "https://github.com/weaveworks/eksctl/releases/download/v0.73.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
      - run:
          command: |
            ./createStagingCluster.sh
      # - run:
      #     command: |
      #       ./deleteEarlyStagingCluster.sh

workflows:
  update-image:
    jobs:
      - update-image
      # - test-lint
      # - deploy:
      #     requires: [test-lint]
