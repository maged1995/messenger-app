version: 2.1

commands:
  discord_notify_failure:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "Hello World"
    steps:
      - run: echo << parameters.to >>

jobs:
  lint:
    docker:
      - image: amazon/aws-cli
  eksctl-install:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          command: |
            curl --location "https://github.com/weaveworks/eksctl/releases/download/v0.73.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
  update-docker:
    machine: true
    working_directory: ~/my_app
    steps:
      - run:
          command: |
            DATE_OF_PUSH=$(date +"%y.%m.%d-%H.%M.%S")
            if docker build -t django-app . && ((! grep "")); then
              exit 1
            fi

            if docker login -u $DOCKER_USER -p $DOCKER_PASS && ((! grep "")); then
              exit 1
            fi
            docker image tag django-app maged1995/django-app:latest
            docker image tag django-app maged1995/django-app:$DATE_OF_PUSH
            docker image push maged1995/django-app:latest
            docker image push maged1995/django-app:$DATE_OF_PUSH
  create-cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          command: |
            ./createTestCluster.sh
  apply-staging-app-to-cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          command: |
            cd staging
            kubectl apply -f .
  switch-to-newest-cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          command: |
            # delete network load balancer
            # create new network load balancer targeting the new application load balancer
            ########## OR ##########
            # change the target if possiple
