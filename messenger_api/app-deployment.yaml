apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.24.0 (4a2a0458)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.24.0 (4a2a0458)
      creationTimestamp: null
      labels:
        io.kompose.service: app
    spec:
      containers:
        - args:
            - bash
            - -c
            - cd /app && python3 manage.py wait_for_database && python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:3000
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: env
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: DB_PORT
                  name: env
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  key: PGDATABASE
                  name: env
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  key: PGPASSWORD
                  name: env
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  key: PGUSER
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
          image: 371713243830.dkr.ecr.us-east-1.amazonaws.com/django-app:1.0.3
          name: app
          ports:
            - containerPort: 3000
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: app-claim0
      restartPolicy: Always
      volumes:
        - name: app-claim0
          persistentVolumeClaim:
            claimName: app-claim0
status: {}
